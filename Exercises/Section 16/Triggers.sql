-- TRIGGERS

-- TIPO SENTENCIA

CREATE OR REPLACE TRIGGER TRG_FACTURAS
AFTER INSERT OR UPDATE OR DELETE 
ON FACTURAS
BEGIN
    IF INSERTING THEN
        INSERT INTO CONTROL_LOG
        VALUES (USER, SYSDATE, 'FACTURAS', 'I');
    ELSIF UPDATING THEN
        INSERT INTO CONTROL_LOG
        VALUES (USER, SYSDATE, 'FACTURAS', 'U');
    ELSIF DELETING THEN
        INSERT INTO CONTROL_LOG
        VALUES (USER, SYSDATE, 'FACTURAS', 'D');
    END IF;
END TRG_FACTURAS;
/


CREATE OR REPLACE TRIGGER TRG_LINEAS_FACTURA
AFTER INSERT OR UPDATE OR DELETE
ON LINEAS_FACTURA
BEGIN
    IF INSERTING THEN
        INSERT INTO CONTROL_LOG
        VALUES (USER, SYSDATE, 'FACTURAS', 'I');
    ELSIF UPDATING THEN
        INSERT INTO CONTROL_LOG
        VALUES (USER, SYSDATE, 'FACTURAS', 'U');
    ELSIF DELETING THEN
        INSERT INTO CONTROL_LOG
        VALUES (USER, SYSDATE, 'FACTURAS', 'D');
    END IF;
END TRG_LINEAS_FACTURA;
/


-- TIPO COLUMNA

CREATE OR REPLACE TRIGGER TRG_TOTAL_VENDIDO
AFTER INSERT OR UPDATE OR DELETE
ON LINEAS_FACTURA
FOR EACH ROW
DECLARE
    TOTAL NUMBER;
BEGIN
    TOTAL := 0;
    IF INSERTING THEN
        UPDATE PRODUCTOS
        SET TOTAL_VENDIDOS = TOTAL_VENDIDOS + (:NEW.PVP * :NEW.UNIDADES)
        WHERE COD_PRODUCTO = :NEW.COD_PRODUCTO;
        COMMIT;
    ELSIF UPDATING THEN
        TOTAL := (:OLD.PVP * :OLD.UNIDADES) - (:NEW.PVP * :NEW.UNIDADES);
        UPDATE PRODUCTOS 
        SET TOTAL_VENDIDOS = TOTAL_VENDIDOS + TOTAL
        WHERE COD_PRODUCTO=:NEW.COD_PRODUCTO;
        COMMIT;
    ELSIF DELETING THEN
        UPDATE PRODUCTOS SET TOTAL_VENDIDOS = TOTAL_VENDIDOS - (:NEW.PVP*:NEW.UNIDADES)
        WHERE COD_PRODUCTO=:NEW.COD_PRODUCTO;
    END IF;
END TRG_TOTAL_VENDIDO;
/